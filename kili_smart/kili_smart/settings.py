"""
Django settings for kili_smart project.

Generated by 'django-admin startproject'.

This file contains configuration settings for the Django project, including database
settings, installed apps, middleware, and other Django-specific options.
"""

import os
from pathlib import Path
import environ

# Initialize environment variables
env = environ.Env()
environ.Env.read_env()  # Reads the .env file

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Django settings
SECRET_KEY = env('DJANGO_SECRET_KEY', default='your-secret-key')
# The secret key used for cryptographic signing. It’s fetched from environment variables for security.

DEBUG = env.bool('DJANGO_DEBUG', default=False)
# Debug mode toggle fetched from environment variables. It should be set to 'False' in production to avoid exposing sensitive information.

ALLOWED_HOSTS = env.list('DJANGO_ALLOWED_HOSTS', default=[])
# A list of allowed hosts that can access your application. It’s fetched from environment variables.

# Application definition
INSTALLED_APPS = [
    'django.contrib.admin',       # Admin interface
    'django.contrib.auth',        # Authentication framework
    'django.contrib.contenttypes',# Content types framework
    'django.contrib.sessions',    # Session management
    'django.contrib.messages',    # Messaging framework
    'django.contrib.staticfiles', # Static files management
    'core',                       # Your core app
    'rest_framework',             # Django REST framework for building APIs
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',      # Provides security enhancements
    'django.contrib.sessions.middleware.SessionMiddleware', # Manages user sessions
    'django.middleware.common.CommonMiddleware',         # Common utilities
    'django.middleware.csrf.CsrfViewMiddleware',          # Cross-Site Request Forgery protection
    'django.contrib.auth.middleware.AuthenticationMiddleware', # User authentication
    'django.contrib.messages.middleware.MessageMiddleware', # Handles messaging framework
    'django.middleware.clickjacking.XFrameOptionsMiddleware', # Protection against clickjacking
]

ROOT_URLCONF = 'kili_smart.urls'
# The root URL configuration for the project, referring to the urls.py file in the project directory.

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates', # Template engine to use
        'DIRS': [BASE_DIR / 'templates'], # Directories to look for template files
        'APP_DIRS': True, # Whether to look for templates in application directories
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'kili_smart.wsgi.application'
ASGI_APPLICATION = 'kili_smart.asgi.application'
# WSGI and ASGI application definitions for synchronous and asynchronous server interfaces.

# Database settings
DATABASES = {
    'default': env.db(default='sqlite:///db.sqlite3')  # Reads DATABASE_URL from .env, defaults to SQLite
}

# Password validation
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]
# Password validation settings to enhance security by enforcing password complexity.

# Internationalization
LANGUAGE_CODE = 'en-us'
# Default language code for the project.

TIME_ZONE = 'UTC'
# Default time zone for the project.

USE_I18N = True
USE_L10N = True
USE_TZ = True
# Internationalization, localization, and timezone settings.

# Static files (CSS, JavaScript, Images)
STATIC_URL = '/static/'
# URL prefix for serving static files.

STATICFILES_DIRS = [BASE_DIR / 'static']
# Directories where Django will look for additional static files.

STATIC_ROOT = BASE_DIR / 'staticfiles'
# Directory where collectstatic will collect static files for deployment.

# Default primary key field type
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
# Default type for primary keys in Django models.

# Django REST framework settings
REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.AllowAny',
    ],
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.BasicAuthentication',
        'rest_framework.authentication.SessionAuthentication',
    ],
}
# Configuration for Django REST framework, including default permissions and authentication classes.

# Frontend API URL (useful for integration with frontend apps)
REACT_APP_API_URL = env('REACT_APP_API_URL', default='http://localhost:8000/api/')
# API URL for the frontend to interact with the Django backend.
